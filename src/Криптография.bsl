
// Вычисляет Хеш-ориентированный Аутентификационный Код Сообщения (ХАКС)
// RFC 2104 https://www.ietf.org/rfc/rfc2104.txt
//
// Параметры:
//  Ключ			- ДвоичныеДанные	- ключ использующийся в алгоритме хеширования
//  Сообщение		- ДвоичныеДанные	- входящие данные, для которых вычисляется хеш
//  ХешФункц		- ХешФункция		- имя алгоритма хеширования
// 
// Возвращает:
//  ДвочиныеДанные - Вычисленный хеш-код
//

Функция ХАКС(Знач СекретныйКлюч, Знач Сообщение, Знач ХешФункц) Экспорт
	
	ПроверкаПоддержкиХешФункции(ХешФункц);
	
	РазмерБлока = 64;
	
	Если СекретныйКлюч.Размер() > РазмерБлока Тогда
		СекретныйКлюч = Хеш(СекретныйКлюч, ХешФункц);
	КонецЕсли;
	
	НетДанных = ПолучитьДвоичныеДанныеИзСтроки("");
	СекретныйКлюч = ДвоичЛев(СекретныйКлюч, РазмерБлока);
	
	Эпс0 = ДвоичПравДоп(СекретныйКлюч, РазмерБлока, "0x00");
	
	ВнутрДоп = ДвоичПравДоп(НетДанных, РазмерБлока, "0x36");
	К_ВнутрДоп = ДвоичПобитовоеИсключительноеИли(Эпс0, ВнутрДоп);
	
	ВнешДоп = ДвоичПравДоп(НетДанных, РазмерБлока, "0x5C");
	К_ВнешДоп = ДвоичПобитовоеИсключительноеИли(Эпс0, ВнешДоп);
	
	К_ВнутрДоп_Сообщение = ДвоичКонкат(К_ВнутрДоп, Сообщение);
	К_ВнешДоп_Хеш = ДвоичКонкат(К_ВнешДоп, Хеш(К_ВнутрДоп_Сообщение, ХешФункц));
	Результат = Хеш(К_ВнешДоп_Хеш, ХешФункц);
	
	Возврат Результат;

КонецФункции


Процедура ПроверкаПоддержкиХешФункции(ХешФункц)

	Если ХешФункц <> ХешФункция.MD5 И ХешФункц <> ХешФункция.SHA1 И ХешФункц <> ХешФункция.SHA256 Тогда
		ВызватьИсключение "ХАКС: не поддерживает хеш функцию: " + ХешФункц;
	КонецЕсли;
	
КонецПроцедуры

Функция ДвоичЛев(Знач ДвоичныеДанные, Знач КоличествоБайтов)
	
	ЧтениеДанных = Новый ЧтениеДанных(ДвоичныеДанные);
	
	ПотокВПамяти = Новый ПотокВПамяти();
	ЗаписьДанных = Новый ЗаписьДанных(ПотокВПамяти);
	
	Буфер = ЧтениеДанных.ПрочитатьВБуферДвоичныхДанных(КоличествоБайтов);
	ЗаписьДанных.ЗаписатьБуферДвоичныхДанных(Буфер);
	
	Возврат ПотокВПамяти.ЗакрытьИПолучитьДвоичныеДанные();
	
КонецФункции

Функция ДвоичПравДоп(Знач ДвоичныеДанные, Знач Длина, Знач ШестнадцатеричнаяСтрока)

	ДопБайт = ЧислоИзШестнадцатеричнойСтроки(ШестнадцатеричнаяСтрока);
	
	ЧтениеДанных = Новый ЧтениеДанных(ДвоичныеДанные);
	
	ПотокВПамяти = Новый ПотокВПамяти();
	ЗаписьДанных = Новый ЗаписьДанных(ПотокВПамяти);
	
	Буфер = ЧтениеДанных.ПрочитатьВБуферДвоичныхДанных();
	Если Буфер.Размер > 0 Тогда
		ЗаписьДанных.ЗаписатьБуферДвоичныхДанных(Буфер);
	КонецЕсли;
	
	Для Счт = Буфер.Размер + 1 По Длина Цикл
		ЗаписьДанных.ЗаписатьБайт(ДопБайт);
	КонецЦикла;
	
	Возврат ПотокВПамяти.ЗакрытьИПолучитьДвоичныеДанные();
	
КонецФункции

Функция ДвоичПобитовоеИсключительноеИли(Знач ДвоичныеДанные1, Знач ДвоичныеДанные2)
	
	ПотокВПамяти = Новый ПотокВПамяти();
	ЗаписьДанных = Новый ЗаписьДанных(ПотокВПамяти);
	
	ЧтениеДанных1 = Новый ЧтениеДанных(ДвоичныеДанные1);
	ЧтениеДанных2 = Новый ЧтениеДанных(ДвоичныеДанные2);
	
	Буфер1 = ЧтениеДанных1.ПрочитатьВБуферДвоичныхДанных();
	Буфер2 = ЧтениеДанных2.ПрочитатьВБуферДвоичныхДанных();
	
	Если Буфер1.Размер > Буфер2.Размер Тогда
		Буфер1.ЗаписатьПобитовоеИсключительноеИли(0, Буфер2, Буфер2.Размер);
		ЗаписьДанных.ЗаписатьБуферДвоичныхДанных(Буфер1);
	Else 
		Буфер2.ЗаписатьПобитовоеИсключительноеИли(0, Буфер1, Буфер1.Размер);
		ЗаписьДанных.ЗаписатьБуферДвоичныхДанных(Буфер2);
	КонецЕсли;
	
	Результат = ПотокВПамяти.ЗакрытьИПолучитьДвоичныеДанные();
	Возврат Результат;

КонецФункции

Функция Хеш(Знач Значение, Знач ХешФункц) Экспорт

	ХешированниеДанных = Новый ХешированиеДанных(ХешФункц);
	ХешированниеДанных.Добавить(Значение);
	Возврат ХешированниеДанных.ХешСумма;

КонецФункции

Функция ДвоичКонкат(Знач ДвоичныеДанные1, Знач ДвоичныеДанные2)

	ПотокВПамяти = Новый ПотокВПамяти();
	ЗаписьДанных = Новый ЗаписьДанных(ПотокВПамяти);
	
	ЧтениеДанных1 = Новый ЧтениеДанных(ДвоичныеДанные1);
	ЧтениеДанных2 = Новый ЧтениеДанных(ДвоичныеДанные2);
	
	Буфер1 = ЧтениеДанных1.ПрочитатьВБуферДвоичныхДанных();
	Буфер2 = ЧтениеДанных2.ПрочитатьВБуферДвоичныхДанных();
	
	ЗаписьДанных.ЗаписатьБуферДвоичныхДанных(Буфер1);
	ЗаписьДанных.ЗаписатьБуферДвоичныхДанных(Буфер2);
	
	Результат = ПотокВПамяти.ЗакрытьИПолучитьДвоичныеДанные();
	Возврат Результат;

КонецФункции
